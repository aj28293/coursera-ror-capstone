From 2673062a60a15f53c8318477dfbf6d2dcc5d4a1a Mon Sep 17 00:00:00 2001
From: Alexander Tupavov <tauinbox@gmail.com>
Date: Fri, 3 Feb 2017 11:18:45 +0300
Subject: [PATCH 2/2] added application solutions

---
 0001-added-assignment-tests.patch              | 117 +++++++++++++++++++++++++
 app/assets/javascripts/spa-demo/foos/foos.html |   5 +-
 app/controllers/application_controller.rb      |  10 +++
 3 files changed, 130 insertions(+), 2 deletions(-)
 create mode 100644 0001-added-assignment-tests.patch

diff --git a/0001-added-assignment-tests.patch b/0001-added-assignment-tests.patch
new file mode 100644
index 0000000..f2b11a6
--- /dev/null
+++ b/0001-added-assignment-tests.patch
@@ -0,0 +1,117 @@
+From 51d3f5d539598cfad25852bd0ae1b9d009bbacea Mon Sep 17 00:00:00 2001
+From: Alexander Tupavov <tauinbox@gmail.com>
+Date: Fri, 3 Feb 2017 11:16:38 +0300
+Subject: [PATCH] added assignment tests
+
+---
+ spec/factories/foobars.rb         | 22 +++++++++++++++++++++-
+ spec/features/manage_foos_spec.rb | 14 +++++++++++++-
+ spec/requests/api_foos_spec.rb    | 18 ++++++++++++++++++
+ 3 files changed, 52 insertions(+), 2 deletions(-)
+
+diff --git a/spec/factories/foobars.rb b/spec/factories/foobars.rb
+index 51a9cf4..5d3c07b 100644
+--- a/spec/factories/foobars.rb
++++ b/spec/factories/foobars.rb
+@@ -1,3 +1,17 @@
++class CustomSequence
++  def initialize(max)
++    @value, @max = 0, max
++  end
++
++  def next
++    @value = @value >= @max ? 0 : (@value + 1)
++  end
++
++  def peek
++    @value.to_s
++  end
++end
++
+ FactoryGirl.define do
+ 
+   factory :foo_fixed, class: 'Foo' do
+@@ -26,6 +40,12 @@ FactoryGirl.define do
+     name { Faker::Name.name }
+   end
+ 
++  factory :foo_faker_num, class: 'Foo' do
++    sequence(:name, CustomSequence.new(9)) do |n|
++      Faker::Name.name + "#{n}"
++    end
++  end
++
+   factory :foo_ctor, class: 'Foo' do
+     transient do
+       hash {}
+@@ -33,7 +53,7 @@ FactoryGirl.define do
+     initialize_with { Foo.new(hash) }
+   end
+ 
+-  factory :foo, :parent=>:foo_faker do
++  factory :foo, :parent=>:foo_faker_num do
+   end
+ 
+   factory :bar do
+diff --git a/spec/features/manage_foos_spec.rb b/spec/features/manage_foos_spec.rb
+index 397eccb..5450216 100644
+--- a/spec/features/manage_foos_spec.rb
++++ b/spec/features/manage_foos_spec.rb
+@@ -44,7 +44,7 @@ RSpec.feature "ManageFoos", type: :feature, :js=>true do
+       expect(page).to have_css("label", :text=>"Name:")
+       expect(page).to have_css("input[name='name'][ng-model*='foo.name']")
+       expect(page).to have_css("button[ng-click*='create()']", :text=>"Create Foo")
+-      expect(page).to have_button("Create Foo")
++      expect(page).to have_button("Create Foo", disabled: true)
+     end
+ 
+     scenario "complete form" do
+@@ -114,6 +114,18 @@ RSpec.feature "ManageFoos", type: :feature, :js=>true do
+         expect(page).to have_no_css("a",text:foo_state[:name])
+       end
+     end
++  end
+ 
++  feature "Create button disabled when no name" do
++    scenario "disabled when no name" do
++      visit root_path
++      within(:xpath,FOO_FORM_XPATH) do
++        expect(page).to have_selector("input", text: "")
++        expect(page).to have_css("input.ng-invalid")
++        expect(page).to have_css("button[disabled='disabled']")
++        expect(page).to have_css("button[ng-disabled*='$invalid']")
++        # expect(page).to have_button('Create Foo', disabled: true)
++      end      
++    end
+   end
+ end
+diff --git a/spec/requests/api_foos_spec.rb b/spec/requests/api_foos_spec.rb
+index 9421635..607b98c 100644
+--- a/spec/requests/api_foos_spec.rb
++++ b/spec/requests/api_foos_spec.rb
+@@ -97,4 +97,22 @@ RSpec.describe "Foo API", type: :request do
+       expect(response).to have_http_status(:not_found)
+     end
+   end
++
++  context "invalid Foo reports API error" do
++    let(:bad_statement) { {foo: {id: 1}} }
++
++    it "returns unprocessable entity when using incorrect statement" do
++      jpost foos_path, bad_statement
++
++      payload = parsed_body
++      # pp payload
++
++      expect(response).to have_http_status(:unprocessable_entity)
++      expect(response.content_type).to eq("application/json") 
++      expect(payload).to have_key("errors")
++      expect(payload["errors"]).to have_key("full_messages")
++      expect(payload["errors"]["full_messages"][0]).to include("ERROR")
++
++    end    
++  end
+ end
+-- 
+1.9.4.msysgit.2
+
diff --git a/app/assets/javascripts/spa-demo/foos/foos.html b/app/assets/javascripts/spa-demo/foos/foos.html
index 98dbb6a..843f6d0 100644
--- a/app/assets/javascripts/spa-demo/foos/foos.html
+++ b/app/assets/javascripts/spa-demo/foos/foos.html
@@ -2,7 +2,7 @@
   <h3>Foos</h3>
   <span>(from spa-demo/foos/foos.html)</span>
 
-  <form>
+  <form name="fooForm">
     <div>
       <label>Name:</label>
       <input name="name"
@@ -12,7 +12,8 @@
 
     <button ng-if="!foosVM.foo.id" 
              type="submit"
-             ng-click="foosVM.create()">Create Foo</button>  
+             ng-click="foosVM.create()"
+             ng-disabled="fooForm.$invalid">Create Foo</button>  
     <div ng-if="foosVM.foo.id">
       <button type="submit"
               ng-click="foosVM.update()">Update Foo</button>
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 91d44c0..5513fd6 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -5,6 +5,8 @@ class ApplicationController < ActionController::API
   rescue_from ActiveRecord::RecordNotFound, with: :record_not_found
   rescue_from Mongoid::Errors::DocumentNotFound, with: :record_not_found
 
+  rescue_from ActiveRecord::StatementInvalid, with: :statement_invalid
+
   protected
     def record_not_found(exception) 
       payload = {
@@ -13,4 +15,12 @@ class ApplicationController < ActionController::API
       render :json=>payload, :status=>:not_found
       Rails.logger.debug exception.message
     end
+
+    def statement_invalid(exception)
+      payload = {
+        errors: { full_messages: exception.message.split("\n") }
+      }
+      render json: payload, status: :unprocessable_entity
+      Rails.logger.debug exception.message
+    end
 end
-- 
1.9.4.msysgit.2

